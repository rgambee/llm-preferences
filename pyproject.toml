[project]
name = "llmprefs"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "anthropic>=0.60.0",
    "openai>=1.99.8",
    "pydantic>=2.10.6",
    "python-dotenv>=1.0.1",
    "tenacity>=9.0.0",
]

[dependency-groups]
dev = [
    "anyio>=4.5.2",
    "pyright>=1.1.402",
    "pytest>=8.3.5",
    "ruff>=0.12.2",
]

[tool.setuptools.packages.find]
# The data/ directory only contains datasets, no code
exclude = ["data"]

[tool.pyright]
reportUnusedImport = true
reportUnusedVariable = true
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]

[tool.ruff]
exclude = [".git", ".venv", "__pycache__"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",    # Trailing comma missing (disabled due to conflict with `ruff format`)
    "D100",      # Missing docstring in public module
    "D101",      # Missing docstring in public class
    "D102",      # Missing docstring in public method
    "D103",      # Missing docstring in public function
    "D104",      # Missing docstring in public package
    "D105",      # Missing docstring in magic method
    "D106",      # Missing docstring in public nested class
    "D107",      # Missing docstring in __init__
    "EM",        # flake8-errmsg
    "G004",      # Logging statement uses f-string
    "TC001",     # Move application import `...` into a type-checking block
    "TC002",     # Move third-party import `...` into a type-checking block
    "TC003",     # Move standard library import `...` into a type-checking block
    "TRY003",    # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = [
    "PLR2004",   # Magic value used in comparison
    "S101",      # Use of `assert` detected
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pydocstyle]
convention = "pep257"
